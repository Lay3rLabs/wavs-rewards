// This script loads environment variables from script_deploy.json and the root .env file
// and prepares them for use in the Next.js frontend
const fs = require('fs');
const path = require('path');
const dotenv = require('dotenv');

// Paths to the required files
const scriptDeployPath = path.resolve(__dirname, '../.docker/script_deploy.json');
const rootEnvPath = path.resolve(__dirname, '../.env');
const frontendEnvPath = path.resolve(__dirname, '.env.local');

// Required environment variables that must be present
const REQUIRED_VARS = [
  'IPFS_GATEWAY_URL'
];

function loadAndTransformEnv() {
  try {
    // Check if script_deploy.json exists
    if (!fs.existsSync(scriptDeployPath)) {
      console.error('ERROR: No script_deploy.json file found at', scriptDeployPath);
      process.exit(1);
    }

    // Check if root .env exists
    if (!fs.existsSync(rootEnvPath)) {
      console.error('ERROR: No root .env file found at', rootEnvPath);
      process.exit(1);
    }

    // Parse the script_deploy.json file
    const deployConfig = JSON.parse(fs.readFileSync(scriptDeployPath, 'utf8'));
    
    // Parse the root .env file for IPFS gateway URL
    const rootEnv = dotenv.parse(fs.readFileSync(rootEnvPath));
    
    // Check for required variables in root .env
    const missingVars = [];
    for (const requiredVar of REQUIRED_VARS) {
      if (!rootEnv[requiredVar]) {
        missingVars.push(requiredVar);
      }
    }
    
    if (missingVars.length > 0) {
      console.error('ERROR: Missing required environment variables in root .env:');
      missingVars.forEach(variable => console.error(`- ${variable}`));
      process.exit(1);
    }
    
    // Transform the variables according to the mapping
    const transformedVars = {
      'NEXT_PUBLIC_REWARD_DISTRIBUTOR_ADDRESS': deployConfig.service_handler,
      'NEXT_PUBLIC_REWARD_TOKEN_ADDRESS': deployConfig.reward_token,
      'NEXT_PUBLIC_REWARD_SOURCE_NFT_ADDRESS': deployConfig.reward_source_nft,
      'NEXT_PUBLIC_IPFS_GATEWAY_URL': rootEnv.IPFS_GATEWAY_URL,
      'NEXT_PUBLIC_RPC_URL': 'http://localhost:8545',
      'NEXT_PUBLIC_NETWORK_NAME': 'Local'
    };
    
    // Generate content for the frontend .env.local file
    let fileContent = '# This file is auto-generated from script_deploy.json and root .env\n';
    fileContent += '# Do not edit this file directly\n\n';
    
    for (const key in transformedVars) {
      fileContent += `${key}=${transformedVars[key]}\n`;
    }
    
    // Write to .env.local for Next.js
    fs.writeFileSync(frontendEnvPath, fileContent);
    
    console.log('Environment variables loaded successfully');
    console.log('Variables set:');
    for (const key in transformedVars) {
      console.log(`- ${key}`);
    }
  } catch (error) {
    console.error('Error loading environment variables:', error);
    process.exit(1);
  }
}

loadAndTransformEnv();